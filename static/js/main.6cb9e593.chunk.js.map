{"version":3,"sources":["redux/reducers/contacts.js","redux/reducers/filter.js","redux/store/index.js","Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.js","Containers/ContactsFormContainer.js","Components/ContactItem/ContactItem.styles.js","Components/ContactItem/ContactItem.js","Containers/ContactItemContainer.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Containers/ContactListContainer.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","Containers/FilterContainer.js","Components/Phonebook/Phonebook.styles.js","Components/Phonebook/Phonebook.js","helpers/storage.js","Containers/PhonebookContainer.js","App.js","index.js"],"names":["arrContactsSlice","createSlice","name","initialState","reducers","add","state","payload","remove","filter","contact","id","show","actions","contactsState","contacts","filterName","changeFilter","filterState","rootReducer","globalState","configureStore","reducer","devTools","process","Form","styled","form","Label","label","Input","input","Button","transition","button","attrs","mountOnEnter","timeout","Message","div","unmountOnExit","ContactForm","number","onSubmit","onChange","disabledAlert","alert","btnNon","htmlFor","type","value","autoFocus","in","onEntered","formInitialState","toast","configure","ContactFormContainer","notify","field","error","notifyAlert","is","success","useState","setForm","setAlert","setBtnNon","dispatch","useDispatch","useSelector","e","preventDefault","uuidv4","find","el","length","target","replace","exec","Name","span","Number","a","ContactItem","onDelete","tel","href","onClick","propTypes","PropTypes","shape","string","isRequired","onDeleteContact","func","ContactItemContainer","List","ul","Item","li","ContactList","filteredArr","TransitionGroup","component","map","key","ContactListContainer","toLowerCase","includes","filteredContacts","InputFilter","Filter","showFilter","bool","FilterContainer","Title","h1","Phonebook","visibleLogo","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","PhonebookContainer","setVisibleLogo","useEffect","contactsData","storage","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6cb9e593.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst arrContactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: [],\r\n  reducers: {\r\n    add: (state, { payload }) => [...state, payload],\r\n    remove: (state, { payload }) =>\r\n      state.filter((contact) => contact.id !== payload),\r\n    show: (state, { payload }) => [...state, ...payload],\r\n  },\r\n});\r\n\r\nexport const { add, remove, show } = arrContactsSlice.actions;\r\n\r\nexport const contactsState = (state) => state.contacts;\r\n\r\nexport default arrContactsSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst filterName = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    changeFilter: (state, { payload }) => (state = payload),\r\n  },\r\n});\r\n\r\nexport const { changeFilter } = filterName.actions;\r\n\r\nexport const filterState = (state) => state.filter;\r\n\r\nexport default filterName.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contacts from \"../reducers/contacts\";\r\nimport filter from \"../reducers/filter\";\r\n\r\nconst rootReducer = {\r\n  contacts,\r\n  filter,\r\n};\r\n\r\nconst globalState = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\nexport default globalState;","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    width: 400px;\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: inline-block;\r\n    margin-bottom: 16px;\r\n    font-size: 20px;\r\n    color: #171718;\r\n`;\r\nexport const Input = styled.input`\r\n    color: #171718;\r\n    font: inherit;\r\n    font-size: 1.2rem;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    border: 1px solid #bdbdbd;\r\n    width: 350px;\r\n    outline: 0;\r\n`;\r\n\r\n// export const ButtonNon = styled.button`\r\n// display: none;\r\n// `\r\n\r\nexport const Button = transition.button.attrs({\r\n  mountOnEnter: true,\r\n  // unmountOnExit: true,\r\n  timeout: 250,\r\n})`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    border: 0;\r\n    outline: 0;\r\n    padding: 8px 24px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n    font: inherit;\r\n    text-transform: uppercase;\r\n    user-select: none;\r\n    transition: background-color 200ms ease-in-out;\r\n    :hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n  &:enter { \r\n    opacity: 0;\r\n  }\r\n&:enter-active {\r\n  opacity: 1;\r\n  transition: opacity 250ms ease-in;\r\n}\r\n&:exit { \r\n  opacity: 1;\r\n}\r\n&:exit-active {\r\n  opacity: 0;\r\n  transition: opacity 250ms ease-in;\r\n}\r\n  \r\n`;\r\nexport const Message = transition.div.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 3500,\r\n})`\r\n  background: red;\r\n  width:220px;\r\n  height: 80px;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  font-weight: 500;\r\n  border-radius:8px;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  span{\r\n    color:#fff;\r\n  }\r\n  &:enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  &:enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: opacity 250ms ease-in, transform 250ms ease-in;\r\n  }\r\n  &:exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  &:exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: opacity 250ms ease-in .3s, transform 250ms ease-in .3s;\r\n  }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Message, Form, Label, Input, Button } from \"./ContactForm.styles\";\r\n\r\nconst ContactForm = ({\r\n  name,\r\n  number,\r\n  onSubmit,\r\n  onChange,\r\n  disabledAlert,\r\n  alert,\r\n  btnNon,\r\n}) => {\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Label htmlFor=\"name\">\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          autoFocus\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"number\">\r\n        Number\r\n        <Input type=\"text\" name=\"number\" value={number} onChange={onChange} />\r\n      </Label>\r\n      <Button type=\"submit\" in={btnNon}>\r\n        Add Contact\r\n      </Button>\r\n      <Message in={alert} onEntered={disabledAlert}>\r\n        <span>Contact is already exist</span>\r\n      </Message>\r\n    </Form>\r\n  );\r\n};\r\nContactForm.propTypes = {\r\n  number: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  disabledAlert: PropTypes.func,\r\n  alert: PropTypes.bool,\r\n  btnNon: PropTypes.bool,\r\n};\r\n\r\nexport default ContactForm;","import React, { useState } from \"react\";\r\nimport { v1 as uuidv4 } from \"uuid\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { add } from \"../redux/reducers/contacts\";\r\nimport { contactsState } from \"../redux/reducers/contacts\";\r\n\r\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\r\n\r\nconst formInitialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\ntoast.configure();\r\n\r\nconst ContactFormContainer = () => {\r\n  const notify = (field) => toast.error(`💩 Contact ${field} is too short!`);\r\n  const notifyAlert = (is) => toast.success(`Please enter only ${is}`);\r\n  const [form, setForm] = useState(formInitialState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [btnNon, setBtnNon] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsState);\r\n  const inputHandler = (e) => {\r\n    const name = e.target.name;\r\n    let value = \"\";\r\n    if (name === \"name\") {\r\n      value = e.target.value.replace(/[^A-zА-яЁё\\s]+/gi, \"\");\r\n\r\n      const numbersCheck = /\\d+/g;\r\n      if (numbersCheck.exec(e.target.value)) {\r\n        notifyAlert(\"letters\");\r\n      }\r\n    }\r\n    if (name === \"number\") {\r\n      value = e.target.value.replace(/[^\\d\\s,+,-,(,)]+/gi, \"\");\r\n      const lettersCheck = /[A-zА-яЁё]+/g;\r\n      if (lettersCheck.exec(e.target.value)) {\r\n        notifyAlert(\"numbers\");\r\n      }\r\n    }\r\n    setForm({ ...form, [name]: value });\r\n    \r\n    const NonBtn = form;\r\n    if(NonBtn){\r\n      setBtnNon(true);\r\n      return\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = form;\r\n    const contact = {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    const isExistName = contacts.find((el) => el.name === contact.name);\r\n    if (isExistName) {\r\n      setAlert(true);\r\n      return;\r\n    }\r\n\r\n    if (contact.name.length <= 1) {\r\n      notify(\"name\");\r\n      return;\r\n    } else if (contact.number.length <= 1) {\r\n      notify(\"number\");\r\n      return;\r\n    }\r\n\r\n    dispatch(add(contact));\r\n    setForm(formInitialState);\r\n  };\r\n  const disabledAlert = () => {\r\n    setAlert(false);\r\n  };\r\n  const { name, number } = form;\r\n  return (\r\n    <ContactForm\r\n      name={name}\r\n      number={number}\r\n      onSubmit={submitHandler}\r\n      onChange={inputHandler}\r\n      disabledAlert={disabledAlert}\r\n      alert={alert}\r\n      btnNon = {btnNon}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ContactFormContainer;","import styled from \"styled-components\";\r\n\r\nexport const Name = styled.span`\r\n  margin: 0;\r\n  width: 125px;\r\n`;\r\nexport const Number = styled.a`\r\n  margin: 0;\r\n  width: 125px;\r\n  text-transform: uppercase;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  height: 2.5em;\r\n  width: 2.5em;\r\n  border: none;\r\n  background-color: #f2392d;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #c6180c;\r\n    transition: background-color 0.2s ease-in-out;\r\n  }\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    height: 1.5em;\r\n    width: 4px;\r\n    border-radius: 50px;\r\n    background-color: #fff;\r\n    transform: rotate(45deg);\r\n    position: absolute;\r\n    top: 0.5em;\r\n    left: 1.1em;\r\n  }\r\n  :before {\r\n    content: \"\";\r\n    display: block;\r\n    height: 1.5em;\r\n    width: 4px;\r\n    border-radius: 50px;\r\n    background-color: #fff;\r\n    transform: rotate(-45deg);\r\n    position: absolute;\r\n    top: 0.5em;\r\n    left: 1.1em;\r\n  }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Name, Number } from \"./ContactItem.styles\";\r\n\r\nconst ContactItem = ({ name, number, onDelete }) => {\r\n  const tel = `tel: ${number}`\r\n  return (\r\n    <>\r\n      <Name>{name} :</Name>\r\n      <Number href={tel}> {number}</Number>\r\n      <Button onClick={onDelete}></Button>\r\n    </>\r\n  );\r\n};\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { remove } from \"../redux/reducers/contacts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport ContactItem from \"../Components/ContactItem/ContactItem\";\r\n\r\nconst ContactItemContainer = ({ contact }) => {\r\n  const { id, name, number } = contact;\r\n  const dispatch = useDispatch();\r\n  const onDelete = () => {\r\n    dispatch(remove(id));\r\n  };\r\n  return <ContactItem onDelete={onDelete} name={name} number={number} />;\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    contact: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItemContainer;","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nexport const List = styled.ul`\r\n  display: block;\r\n  margin: 0;\r\n  padding-top: 1em;\r\n`;\r\nexport const Item = transition.li.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 500,\r\n})`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 0;\r\npadding: 10px;\r\nfont-weight: 500;\r\nmax-width: 300px;\r\nbox-shadow: 0px 2px 3px 0px rgba(50, 50, 50, 0.5);\r\nborder-radius: 2px;\r\n&:enter { \r\n  opacity: 0;\r\n  transform: translateX(-100%); \r\n}\r\n&:enter-active {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\r\n}\r\n&:exit { \r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n&:exit-active {\r\n  opacity: 0;\r\n  transform: translateX(-100%);\r\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactItemContainer from \"../../Containers/ContactItemContainer\";\r\n\r\nimport { List, Item } from \"./ContactList.styles\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ContactList = ({ filteredArr }) => {\r\n  return (\r\n    <TransitionGroup component={List}>\r\n      {filteredArr.map((contact) => (\r\n        <Item key={contact.id}>\r\n          <ContactItemContainer contact={contact} />\r\n        </Item>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredArr: PropTypes.array,\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { contactsState } from \"../redux/reducers/contacts\";\r\nimport { filterState } from \"../redux/reducers/filter\";\r\n\r\nimport ContactList from \"../Components/ContactList/ContactList\";\r\n\r\nconst ContactListContainer = () => {\r\n  const contacts = useSelector(contactsState);\r\n  const filter = useSelector(filterState);\r\n\r\n  const filteredContacts = (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  const filteredArr = filteredContacts(contacts, filter);\r\n\r\n  return <ContactList filteredArr={filteredArr} />;\r\n};\r\n\r\nexport default ContactListContainer;","import transition from \"styled-transition-group\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Form = transition.form.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 250,\r\n})`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    width: 400px;\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 16px;\r\n    &:enter { \r\n      opacity: 0;\r\n    }\r\n  &:enter-active {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n  &:exit { \r\n    opacity: 1;\r\n  }\r\n  &:exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n      display: inline-block;\r\n      margin-bottom: 16px;\r\n      font-size: 20px;\r\n      color: #171718;\r\n`;\r\n\r\n\r\n// export const InputFilter = transition.input.attrs({\r\n//   unmountOnExit: true,\r\n//   timeout: 250,\r\n// })\r\nexport const InputFilter = styled.input`\r\n    color: #171718;\r\n    font: inherit;\r\n    font-size: 1.2rem;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    border-radius: 4px;\r\n    border: 1px solid rgb(98, 132, 177);\r\n    width: 350px;\r\n    outline: 0;\r\n      \r\n\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { InputFilter, Label, Form } from \"./Filter.styles\";\r\nconst Filter = ({ showFilter, filter, onChange }) => (\r\n  <>\r\n  <Form in={showFilter}>\r\n    <Label>Find contacts by name\r\n    <InputFilter\r\n    onChange={(e) => onChange(e.target.value)}\r\n    value={filter}\r\n    type=\"text\"\r\n  /></Label>\r\n  </Form>\r\n  \r\n  \r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  showFilter: PropTypes.bool,\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../redux/reducers/filter\";\r\nimport { filterState } from \"../redux/reducers/filter\";\r\n\r\nimport Filter from \"../Components/Filter/Filter\";\r\n\r\nconst FilterContainer = ({ showFilter }) => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(filterState);\r\n  const handleChange = (target) => {\r\n    dispatch(changeFilter(target));\r\n  };\r\n  return (\r\n    <Filter showFilter={showFilter} filter={filter} onChange={handleChange} />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  showFilter: PropTypes.bool,\r\n};\r\n\r\nexport default FilterContainer;","import transition from \"styled-transition-group\";\r\n\r\nexport const Title = transition.h1.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 500,\r\n})`\r\ncolor: #3645ab;\r\n  &:enter { opacity: 0.01; }\r\n  &:enter-active {\r\n    opacity: 1;\r\n    transition: opacity 500ms ease-in;\r\n  }\r\n  &:exit { opacity: 1; }\r\n  &:exit-active {\r\n    opacity: 0.01;\r\n    transition: opacity 500ms ease-in;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactFormContainer from \"../../Containers/ContactsFormContainer\";\r\nimport ContactListContainer from \"../../Containers/ContactListContainer\";\r\nimport FilterContainer from \"../../Containers/FilterContainer\";\r\n\r\nimport { Title } from \"./Phonebook.styles\";\r\n\r\nconst Phonebook = ({ showFilter, visibleLogo }) => (\r\n  <>\r\n    <Title in={visibleLogo}>Phonebook</Title>\r\n    <ContactFormContainer />\r\n    <FilterContainer showFilter={showFilter} />\r\n    <ContactListContainer />\r\n  </>\r\n);\r\n\r\nPhonebook.propTypes = {\r\n  showFilter: PropTypes.bool,\r\n  visibleLogo: PropTypes.bool,\r\n};\r\n\r\nexport default Phonebook;","const save = (key, value) => {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (err) {\r\n      throw new Error();\r\n    }\r\n  };\r\n  \r\n  const get = (key) => {\r\n    try {\r\n      const items = localStorage.getItem(key);\r\n      return items ? JSON.parse(items) : null;\r\n    } catch (err) {\r\n      throw new Error();\r\n    }\r\n  };\r\n  export default {\r\n    save,\r\n    get,\r\n  };","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { show } from \"../redux/reducers/contacts\";\r\nimport { contactsState } from \"../redux/reducers/contacts\";\r\n\r\nimport Phonebook from \"../Components/Phonebook/Phonebook\";\r\nimport storage from \"../helpers/storage\";\r\n\r\nconst PhonebookContainer = () => {\r\n  const contacts = useSelector(contactsState);\r\n  const dispatch = useDispatch();\r\n  const [visibleLogo, setVisibleLogo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setVisibleLogo(true);\r\n    const contactsData = storage.get(\"contacts\");\r\n    if (!contactsData) {\r\n      storage.save(\"contacts\", []);\r\n      return;\r\n    }\r\n    dispatch(show(contactsData));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    storage.save(\"contacts\", contacts);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <Phonebook visibleLogo={visibleLogo} showFilter={contacts.length >= 2} />\r\n  );\r\n};\r\n\r\nexport default PhonebookContainer;","import React from \"react\";\nimport PhonebookContainer from \"./Containers/PhonebookContainer\";\nfunction App() {\n  return <PhonebookContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport globalState from \"./redux/store\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={globalState}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}